apiVersion
-----------

An object definition in Kubernetes requires an apiVersion field. 

When Kubernetes has a release that updates what is available for you to use—changes 

something in its API—a new apiVersion is created.

kind: pod then it is v1

reference : https://matthewpalmer.net/kubernetes-app-developer/articles/kubernetes-apiversion-definition-guide.html

metadata:
  name: centos-pod-2


Understanding Kubernetes objects
-----------------------------------

Namespaces
-----------

In Kubernetes, namespaces provides a mechanism for isolating groups of resources within a single cluster. 

Names of resources need to be unique within a namespace, but not across namespaces. 

Namespace-based scoping is applicable only for namespaced objects (e.g. Deployments, Services, etc) 
and not for cluster-wide objects (e.g. StorageClass, Nodes, PersistentVolumes, etc).


sass273491@inl00474:~/sanjai_train/learning$ kubectl get namespaces
NAME                   STATUS   AGE
default                Active   8h
kube-node-lease        Active   8h
kube-public            Active   8h
kube-system            Active   8h
kubernetes-dashboard   Active   7h55m

sass273491@inl00474:~/sanjai_train/learning$ kubectl create namespace jenkins
namespace/jenkins created

sass273491@inl00474:~/sanjai_train/learning$ kubectl get namespaces
NAME                   STATUS   AGE
default                Active   8h
jenkins                Active   12m
kube-node-lease        Active   8h
kube-public            Active   8h
kube-system            Active   8h
kubernetes-dashboard   Active   8h



What Is Service Account in Kubernetes?
-------------------------------------------

There are two types of account in Kubernetes

User Account: It is used to allow us, humans, to access the given Kubernetes cluster. 
Any user needs to get authenticated by the API server to do so. 

A user account can be an admin or a developer who is trying to access the cluster level resources.

Service Account: It is used to authenticate machine level processes to get access to our Kubernetes cluster. 
The API server is responsible for such authentication to the processes running in the pod

reference : service_account.yaml

PV and PVC
-----------

kubectl get pvc --all-namespaces


